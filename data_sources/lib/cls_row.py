import shelve
from lib.cls_node import Node
from lib.cls_times import Times
from lib.cls_excel import ExcelFile


class Row(Node):
    """
    Класс Row() описывает структуру "сырых" данных.

    В атрибут `data` класса Row() записываются "точки обновления" данных:
    при этом:
        ключ - время получения новых данных;
        значение - словарь с данными.

    Общая идея класса Row() - это что-то вроде  git-а,
    где каждая "точка обновления" - это коммит,
    передвигаясь от начальной точки по порядку можно получить
    состояние на любой момент времени ("машина времени").

    Задача класса Row() - хранить исходники информации загруженных
    в систему источников данных - сырые строки, в виде "квадратных таблиц".
    
    Под "квадратной таблицей" понимается таблица, состоящая из одной строки
    заголовка и любого количества строк с данными.
    Заголовок такой таблицы содержит показатели источника данных ("indicators").
    Строки с данными содержат значения показателей.

    В структурах данных python под "квадратной таблицей" понимается словарь,
    ключи которого - это оказатели источника данных ("indicators"),
    значения - списки одинаковой длины (значения показателей).
    
    В перспективе здесь же будут загрузчики из разного типа файлов,
    или файлов с разной структурой, обрабатываемые с помощью хэндлеров,
    возможно какие-то функции изначальной фильтрации и предобработки,
    а также функции архивации, восстановления и удаления исходных данных.
        
    """

    def upload(self, file_path):
        """
        Метод `upload` создает новую "точку обновления" данных,
        на момент времени из которого он вызван.

        В качестве аргумента он принимает путь к файлу с данными,
        из которого будет получен словарь с данными.
        """
        dt = Times()
        with shelve.open(self.path / 'data') as data:
            data[dt.uts] = ExcelFile(file_path).dict()

    def get_data(self, d: dict) -> dict:
        """

        """
        keys = self.info['keys']
        
